{"changed":false,"filter":false,"title":"recording.haml","tooltip":"/app/views/main/recording.haml","value":"-#%a{href: \"/v1/oneTwo\"}\n-# %img{src: \"\", width: \"0%\"}\n\n    \n:coffeescript\n    $ ->\n        $.ajax\n            method: \"get\"\n            url: \"/alarms\"\n            success: (data)->\n                console.log(\"ALARMS\", data)\n                \n        ######## sounds ########\n        sounds = \n          32: 'noteC'\n          37: 'noteD'\n          38: 'noteE'\n          39: 'noteF' \n          40: 'noteG'\n          65: 'noteA'\n          83: 'noteB'\n          68: 'noteC2'\n        \n        document.onkeydown = (e) ->\n          soundId = sounds[e.keyCode]\n          if soundId\n            document.getElementById(soundId).play()\n          else\n            console.log 'key not mapped : code is', e.keyCode\n          return\n        \n        ######## recording ########\n        \n        record = document.querySelector('.record')\n        stop = document.querySelector('.stop')\n        soundClips = document.querySelector('.sound-clips')\n        canvas = document.querySelector('.visualizer')\n        mainSection = document.querySelector('.main-controls')\n        titleItems = document.querySelector('#title-items')\n        downloadButton = document.getElementById('downloadButton')\n        # disable stop button while not recording\n        \n        visualize = (stream) ->\n            source = audioCtx.createMediaStreamSource(stream)\n            analyser = audioCtx.createAnalyser()\n        \n            draw = ->\n                `WIDTH = canvas.width`\n                `HEIGHT = canvas.height`\n                requestAnimationFrame draw\n                analyser.getByteTimeDomainData dataArray\n                canvasCtx.fillStyle = 'rgb(200, 200, 200)'\n                canvasCtx.fillRect 0, 0, WIDTH, HEIGHT\n                canvasCtx.lineWidth = 2\n                canvasCtx.strokeStyle = 'rgb(0, 0, 0)'\n                canvasCtx.beginPath()\n                sliceWidth = WIDTH * 1.0 / bufferLength\n                x = 0\n                i = 0\n                while i < bufferLength\n                    v = dataArray[i] / 128.0\n                    y = v * HEIGHT / 2\n                    if `i == 0`\n                        canvasCtx.moveTo x, y\n                    else\n                        canvasCtx.lineTo x, y\n                    x += sliceWidth\n                    i++\n                canvasCtx.lineTo canvas.width, canvas.height / 2\n                canvasCtx.stroke()\n                return\n        \n            analyser.fftSize = 2048\n            bufferLength = analyser.frequencyBinCount\n            dataArray = new Uint8Array(bufferLength)\n            source.connect analyser\n            #analyser.connect(audioCtx.destination);\n            draw()\n            return\n        \n        stop.disabled = true\n        # visualiser setup - create web audio api context and canvas\n        audioCtx = new ((window.AudioContext or webkitAudioContext))\n        canvasCtx = canvas.getContext('2d')\n        #main block for doing the audio recording\n        \n        times = 0\n        dailymix = []\n        \n        if navigator.mediaDevices.getUserMedia\n            console.log 'getUserMedia supported.'\n            constraints = audio: true\n            chunks = []\n            \n            onSuccess = (stream) ->\n                mediaRecorder = new MediaRecorder(stream)\n                visualize stream\n                downloadButton.href = stream;\n                document.onclick = -> startStopClick()\n        \n                start = ->\n                    mediaRecorder.start()\n                    console.log mediaRecorder.state\n                    console.log 'recorder started'\n                    record.style.background = 'red'\n                    stop.disabled = false\n                    record.disabled = true\n                    titleItems.style.visibility = 'visible';\n                    return\n                        \n                stop = ->\n                    mediaRecorder.stop()\n                    console.log mediaRecorder.state\n                    console.log 'recorder stopped'\n                    record.style.background = ''\n                    record.style.color = ''\n                    # mediaRecorder.requestData();\n                    stop.disabled = true\n                    record.disabled = false\n                    titleItems.style.visibility = 'hidden';\n                    return\n                \n                startStopClick = ->\n                    if times == 0\n                        start()\n                        times++\n                    else\n                        stop()\n                        times--\n                    return\n        \n                mediaRecorder.onstop = (e) ->\n                    console.log 'data available after MediaRecorder.stop() called.'\n                    clipName = prompt('Enter a name for your sound clip?', 'My unnamed clip')\n                    console.log clipName\n                    clipContainer = document.createElement('article')\n                    clipLabel = document.createElement('p')\n                    audio = document.createElement('audio')\n                    deleteButton = document.createElement('button')\n                    clipContainer.classList.add 'clip'\n                    audio.setAttribute 'controls', ''\n                    deleteButton.textContent = 'Delete'\n                    deleteButton.className = 'delete'\n                    if `clipName == null`\n                        clipLabel.textContent = 'My unnamed clip'\n                    else\n                        clipLabel.textContent = clipName\n                    clipContainer.appendChild audio\n                    clipContainer.appendChild clipLabel\n                    clipContainer.appendChild deleteButton\n                    soundClips.appendChild clipContainer\n                    audio.controls = true;\n                    blob = new Blob(chunks, 'type': 'audio/ogg; codecs=opus')\n                    chunks = []\n                    audioURL = window.URL.createObjectURL(blob)\n                    console.log audio.src\n                    audio.src = audioURL\n                    downloadButton.href = audio.src;\n                    downloadButton.download = \"RecordedSong.ogg\";\n\n                    dailymix.push blob\n                    console.log blob\n                    console.log dailymix\n                    console.log 'recorder stopped'\n        \n\n        \n                    clipLabel.onclick = ->\n                        existingName = clipLabel.textContent\n                        newClipName = prompt('Enter a new name for your sound clip?')\n                        if `newClipName == null`\n                            clipLabel.textContent = existingName\n                        else\n                            clipLabel.textContent = newClipName\n                        return\n        \n                    return\n        \n                mediaRecorder.ondataavailable = (e) ->\n                    chunks.push e.data\n                    return\n        \n                return\n        \n            onError = (err) ->\n                console.log 'The following error occured: ' + err\n                return\n        \n            navigator.mediaDevices.getUserMedia(constraints).then onSuccess, onError\n        else\n            console.log 'getUserMedia not supported on your browser!'\n        \n        window.onresize = ->\n            canvas.width = mainSection.offsetWidth\n            return\n        \n        window.onresize()\n      \n%body\n    %h1= @data[0].audio\n    %audio#noteC\n        %source{:src => \"/audio_samples/noteC.wav\", :type => \"audio/mpeg\"}\n    %audio#noteD\n        %source{:src => \"/audio_samples/noteD.wav\", :type => \"audio/mpeg\"}\n    %audio#noteE\n        %source{:src => \"/audio_samples/noteE.wav\", :type => \"audio/mpeg\"}\n    %audio#noteF\n        %source{:src => \"/audio_samples/noteF.wav\", :type => \"audio/mpeg\"}\n    %audio#noteG\n        %source{:src => \"/audio_samples/noteG.wav\", :type => \"audio/mpeg\"}\n    %audio#noteA\n        %source{:src => \"/audio_samples/noteA.wav\", :type => \"audio/mpeg\"}\n    %audio#noteB\n        %source{:src => \"/audio_samples/noteB.wav\", :type => \"audio/mpeg\"}\n    %audio#noteC2\n        %source{:src => \"/audio_samples/noteC2.wav\", :type => \"audio/mpeg\"}\n    %audio#recording{:controls => \"\"}\n        %source{:src => \"dailymix[0]\", :type => \"audio/ogg\"}\n    \n%html\n    %meta{:content => \"text/html; charset=UTF-8\", \"http-equiv\" => \"Content-Type\"}/\n    %link{:href => \"//fonts.googleapis.com/css?family=Raleway\", :rel => \"stylesheet\", :type => \"text/css\"}/\n    %body\n        #title-area\n            #title-items\n                .title Recording\n                .pulse-button \n        #content-area\n            .music-note1\n            .music-note2\n            .music-note3\n        .wrapper\n            %header\n                %h1 \n            %section.main-controls\n                %canvas.visualizer{:height => \"60px\"}\n                #buttons\n                    %button.record Record\n                    %button.stop Stop\n                    %a#downloadButton.button Download\n\n            %section.sound-clips    \n            \n// IGNORE, BUT KEEP THIS LINE (Back button)   \n= render :partial => \"application/back_to_root\"\n/app/assets/images/audio_samples\n\n:scss\n    html,body {\n        width: 100%;\n        height: 100%;\n        padding: 0px;\n        overflow: hidden; \n    }\n\n\n    .background-blue {\n        background : #304878;\n        background : rgba(48, 72, 120, 1);\n        position: fixed; \n        left : 0px;\n        top : 0px;\n        display: flex;\n        width : 100%;\n        height : 100%;\n    }\n    #title-area {\n        background : #304878;\n        background : rgba(48, 72, 120, 1);\n        //position : absolute;\n        position: fixed;\n        left : 0px;\n        top : 0px;\n        width : 375px;\n        height : 123px;\n    }\n    \n    #title-items {\n        visibility: hidden;\n        height: 100%;\n        width: 85%;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n    \n    #content-area {\n        background : #304878;\n        background : rgba(48, 72, 120, 1);\n        position : fixed;\n        left : 0px;\n        top : 123px;\n        width : 375px;\n        height : 543px;\n        display: flex;\n        vertical-align: center;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: center;\n        border: none;\n    }\n    .title {\n        font-family : Raleway;\n        font-size : 60px;\n        color : #BEBEBE;\n        color : rgb(190, 190, 190);\n        //padding: 30px; \n        position: fixed;\n        \n    }\n    \n    .pulse-button {\n        width: 50px;\n        height: 50px;\n        border: none;\n        box-shadow: 0 0 0 0 rgba(232, 76, 61, 0.7);\n        border-radius: 50%;\n        background-color: #e84c3d;\n\n        -webkit-animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n        -moz-animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n        -ms-animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n        animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n    }\n    \n    .music-note1 {\n        background-image : url(\"/music-note2.png\");\n        background-repeat : no-repeat;\n        position: fixed; \n        left: 88px;\n        top: 230px;\n        transform: rotate(9deg);\n        display: flex; \n        vertical-align: center;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: center;\n        width: 100%; \n        height: 100%;\n        padding-left: 100px;\n        opacity: 0.8;\n\n    }\n    .music-note2 {\n        background-image : url(\"/music-note1.png\");\n        background-repeat : no-repeat;\n        position: fixed;\n        left: -70px;\n        top: 176px;\n        transform: rotate(25deg);\n        display: flex; \n        vertical-align: center;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: center;\n        width: 100%; \n        height: 100%;\n        opacity: 0.8;\n    }\n    .music-note3 {\n        background-image : url(\"/music-note3.png\");\n        background-repeat : no-repeat;\n        position: fixed;\n        left: 188px;\n        top: 408px;\n        transform: rotate(-2deg);\n        display: flex; \n        vertical-align: center;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: right;\n        width: 100%; \n        height: 100%; \n        padding-left: 200px; \n        opacity: 0.8;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    html, body {\n        height: 100%;\n    }\n    \n    body {\n        font-family: 'Raleway', Helvetica, Arial, sans-serif;\n        font-size: 0.8rem;\n    }\n    \n    .wrapper {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        left: 10%;\n        top: 10%;\n    }\n    \n    h1, h2 {\n        font-size: 2rem;\n        text-align: center;\n        font-weight: normal;\n        padding: 0.5rem 0 0 0;\n    }\n    \n    .main-controls {\n        padding: 0.5rem 0;\n        opacity: 0.6;\n        // position: fixed;\n        // top: 18%;\n    }\n    \n    #downloadButton {\n        color: white;\n        font-size: 2em;\n    }\n    \n    canvas {\n        display: block;\n        margin-bottom: 0.5rem;\n    }\n    \n    #buttons {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n    }\n    \n    #buttons button {\n        font-size: 1rem;\n        padding: 1rem;\n        width: calc(50% - 0.25rem);\n    }\n    \n    button {\n        font-size: 1rem;\n        background: #0088cc;\n        text-align: center;\n        color: white;\n        border: none;\n        transition: all 0.2s;\n        padding: 0.5rem;\n        display: none;\n    }\n    \n    button:hover, button:focus {\n        box-shadow: inset 0px 0px 10px rgba(255, 255, 255, 1);\n        background: #0ae;\n    }\n    \n    button:active {\n        box-shadow: inset 0px 0px 20px rgba(0,0,0,0.5);\n        transform: translateY(2px);\n    }\n    \n    \n    /* Make the clips use as much space as possible, and\n     * also show a scrollbar when there are too many clips to show\n     * in the available space */\n    .sound-clips {\n        flex: 1;\n        overflow: auto;\n    }\n    \n    section, article {\n        display: block;\n    }\n    \n    .clip {\n        padding-bottom: 1rem;\n    }\n    \n    audio {\n        width: 100%;\n        display: block;\n        margin: 1rem auto 0.5rem;\n        opacity: 0.9;\n    }\n    \n    .clip p {\n        display: inline-block;\n        font-size: 1rem;\n        color: #fff;\n    }\n    \n    .clip button {\n        font-size: 1rem;\n        float: right;\n    }\n    \n    button.delete {\n        background: #f00;\n        padding: 0.5rem 0.75rem;\n        font-size: 0.8rem;\n        opacity: 0.7;\n    }\n    \n    /* Checkbox hack to control information box display */\n    \n    label {\n        font-size: 3rem;\n        position: absolute;\n        top: 2px;\n        right: 3px;\n        z-index: 5;\n        cursor: pointer;\n    }\n    \n    input[type=checkbox] {\n         position: absolute;\n         top: -100px;\n    }\n    \n    \n    /* Cursor when clip name is clicked over */\n    \n    .clip p {\n        cursor: pointer;\n    }\n    \n    /* Adjustments for wider screens */\n    @media all and (min-width: 800px) {\n        /* Don't take all the space as readability is lost when line length\n             goes past a certain size */\n        .wrapper {\n            width: 90%;\n            max-width: 1000px;\n            margin: 0 auto;\n        }\n    }\n    \n    @-webkit-keyframes pulse {to {box-shadow: 0 0 0 45px rgba(232, 76, 61, 0);}}\n    @-moz-keyframes pulse {to {box-shadow: 0 0 0 45px rgba(232, 76, 61, 0);}}\n    @-ms-keyframes pulse {to {box-shadow: 0 0 0 45px rgba(232, 76, 61, 0);}}\n    @keyframes pulse {to {box-shadow: 0 0 0 45px rgba(232, 76, 61, 0);}}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":206,"column":16},"end":{"row":206,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1502441665714}